{"ast":null,"code":"var _jsxFileName = \"C:\\\\Internship\\\\onchain voting\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport VotingABI from \"./VotingABI.json\";\n\n// Replace with your deployed contract address\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CONTRACT_ADDRESS = \"0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512\";\nfunction App() {\n  _s();\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [parties, setParties] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [txProcessing, setTxProcessing] = useState(false);\n  useEffect(() => {\n    if (typeof window.ethereum !== \"undefined\") {\n      const prov = new ethers.BrowserProvider(window.ethereum);\n      setProvider(prov);\n    } else {\n      console.log(\"MetaMask not detected\");\n    }\n  }, []);\n  useEffect(() => {\n    if (provider && CONTRACT_ADDRESS !== \"REPLACE_WITH_CONTRACT_ADDRESS\") {\n      const c = new ethers.Contract(CONTRACT_ADDRESS, VotingABI, provider);\n      setContract(c);\n      loadParties(c);\n    }\n  }, [provider]);\n  async function connectWallet() {\n    if (!window.ethereum) return alert(\"Install MetaMask\");\n    const accounts = await window.ethereum.request({\n      method: \"eth_requestAccounts\"\n    });\n    setAccount(accounts[0]);\n    const signer = await provider.getSigner();\n    setSigner(signer);\n    if (CONTRACT_ADDRESS && VotingABI) {\n      const contractWithSigner = new ethers.Contract(CONTRACT_ADDRESS, VotingABI, signer);\n      setContract(contractWithSigner);\n      loadParties(contractWithSigner);\n    }\n  }\n  async function loadParties(c) {\n    try {\n      setLoading(true);\n      const res = await c.getParties();\n      const names = res[0];\n      const counts = res[1].map(n => n.toString());\n      const arr = names.map((n, i) => ({\n        name: n,\n        count: counts[i],\n        index: i\n      }));\n      setParties(arr);\n    } catch (err) {\n      console.error(\"Failed to load parties\", err);\n    } finally {\n      setLoading(false);\n    }\n  }\n  async function handleVote(index) {\n    if (!signer) return alert(\"Connect wallet first\");\n    try {\n      setTxProcessing(true);\n      const tx = await contract.vote(index);\n      await tx.wait();\n      alert(\"Vote successful!\");\n      await loadParties(contract);\n    } catch (err) {\n      var _err$data;\n      console.error(err);\n      const reason = (err === null || err === void 0 ? void 0 : (_err$data = err.data) === null || _err$data === void 0 ? void 0 : _err$data.message) || (err === null || err === void 0 ? void 0 : err.message) || \"Transaction failed\";\n      alert(reason);\n    } finally {\n      setTxProcessing(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      padding: \"20px\",\n      fontFamily: \"Arial\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"On-Chain Voting (Wallet Only)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), !account ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: \"Connect MetaMask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Connected: \", account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading parties...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this) : parties.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: parties.map(party => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          margin: \"10px 0\"\n        },\n        children: [party.name, \" - Votes: \", party.count, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: txProcessing,\n          onClick: () => handleVote(party.index),\n          children: \"Vote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this)]\n      }, party.index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No parties available yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jdKWNh3Q0YePdk5JFKAJ/WiSA40=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","ethers","VotingABI","jsxDEV","_jsxDEV","CONTRACT_ADDRESS","App","_s","provider","setProvider","signer","setSigner","contract","setContract","account","setAccount","parties","setParties","loading","setLoading","txProcessing","setTxProcessing","window","ethereum","prov","BrowserProvider","console","log","c","Contract","loadParties","connectWallet","alert","accounts","request","method","getSigner","contractWithSigner","res","getParties","names","counts","map","n","toString","arr","i","name","count","index","err","error","handleVote","tx","vote","wait","_err$data","reason","data","message","className","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","party","margin","disabled","_c","$RefreshReg$"],"sources":["C:/Internship/onchain voting/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport VotingABI from \"./VotingABI.json\";\r\n\r\n// Replace with your deployed contract address\r\nconst CONTRACT_ADDRESS = \"0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512\";\r\n\r\nfunction App() {\r\n  const [provider, setProvider] = useState(null);\r\n  const [signer, setSigner] = useState(null);\r\n  const [contract, setContract] = useState(null);\r\n  const [account, setAccount] = useState(null);\r\n  const [parties, setParties] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [txProcessing, setTxProcessing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (typeof window.ethereum !== \"undefined\") {\r\n      const prov = new ethers.BrowserProvider(window.ethereum);\r\n      setProvider(prov);\r\n    } else {\r\n      console.log(\"MetaMask not detected\");\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (provider && CONTRACT_ADDRESS !== \"REPLACE_WITH_CONTRACT_ADDRESS\") {\r\n      const c = new ethers.Contract(CONTRACT_ADDRESS, VotingABI, provider);\r\n      setContract(c);\r\n      loadParties(c);\r\n    }\r\n  }, [provider]);\r\n\r\nasync function connectWallet() {\r\n  if (!window.ethereum) return alert(\"Install MetaMask\");\r\n  const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n  setAccount(accounts[0]);\r\n    const signer = await provider.getSigner();\r\n    setSigner(signer);\r\n    if (CONTRACT_ADDRESS && VotingABI) {\r\n      const contractWithSigner = new ethers.Contract(CONTRACT_ADDRESS, VotingABI, signer);\r\n      setContract(contractWithSigner);\r\n      loadParties(contractWithSigner);\r\n    }\r\n  }\r\n\r\n  async function loadParties(c) {\r\n    try {\r\n      setLoading(true);\r\n      const res = await c.getParties();\r\n      const names = res[0];\r\n      const counts = res[1].map((n) => n.toString());\r\n      const arr = names.map((n, i) => ({ name: n, count: counts[i], index: i }));\r\n      setParties(arr);\r\n    } catch (err) {\r\n      console.error(\"Failed to load parties\", err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  async function handleVote(index) {\r\n    if (!signer) return alert(\"Connect wallet first\");\r\n    try {\r\n      setTxProcessing(true);\r\n      const tx = await contract.vote(index);\r\n      await tx.wait();\r\n      alert(\"Vote successful!\");\r\n      await loadParties(contract);\r\n    } catch (err) {\r\n      console.error(err);\r\n      const reason = err?.data?.message || err?.message || \"Transaction failed\";\r\n      alert(reason);\r\n    } finally {\r\n      setTxProcessing(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\" style={{ padding: \"20px\", fontFamily: \"Arial\" }}>\r\n      <h1>On-Chain Voting (Wallet Only)</h1>\r\n      {!account ? (\r\n        <button onClick={connectWallet}>Connect MetaMask</button>\r\n      ) : (\r\n        <div>Connected: {account}</div>\r\n      )}\r\n      {loading ? (\r\n        <p>Loading parties...</p>\r\n      ) : parties.length > 0 ? (\r\n        <ul>\r\n          {parties.map((party) => (\r\n            <li key={party.index} style={{ margin: \"10px 0\" }}>\r\n              {party.name} - Votes: {party.count}{\" \"}\r\n              <button disabled={txProcessing} onClick={() => handleVote(party.index)}>\r\n                Vote\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No parties available yet.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}